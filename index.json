[{"categories":["自媒体"],"content":"摘要 ","date":"2020-08-05","objectID":"/20200812-use-hugo-create-site/:1:0","tags":["Hugo"],"title":"使用 Hugo 搭建个人站点","uri":"/20200812-use-hugo-create-site/"},{"categories":["自媒体"],"content":"为什么写博客 ","date":"2020-08-05","objectID":"/20200812-use-hugo-create-site/:2:0","tags":["Hugo"],"title":"使用 Hugo 搭建个人站点","uri":"/20200812-use-hugo-create-site/"},{"categories":["自媒体"],"content":"Hugo 基础使用 Hugo 是一款使用 Go 编写的的静态站点生成器。它使用非常简单，你只需要关注你的内容，选择一款你喜欢的主题，通过几个简单的命令就可以快速生成一个漂亮的个人站点。关于静态网站生成器，之前使用过 Jekyll 和 Hexo。 这两款工具使用也挺简单方便，但安装设置相对来说复杂一点，最重要是生成速度比较慢。Hugo 的页面生成速度很快，目前我之前博客全部从 Hexo 转为使用 Hugo。 ","date":"2020-08-05","objectID":"/20200812-use-hugo-create-site/:3:0","tags":["Hugo"],"title":"使用 Hugo 搭建个人站点","uri":"/20200812-use-hugo-create-site/"},{"categories":["自媒体"],"content":"准备 本文假设您已经做好了这些准备： 电脑安装了 Git。 有 Github 账号, 并熟悉 Github 的基础操作。 ","date":"2020-08-05","objectID":"/20200812-use-hugo-create-site/:3:1","tags":["Hugo"],"title":"使用 Hugo 搭建个人站点","uri":"/20200812-use-hugo-create-site/"},{"categories":["自媒体"],"content":"安装 Hugo 同时支持 MacOS、Windows 和 Linux 等操作系统，安装也非常简单。你可以到官网下载相应的版本。 如果是 MacOS, 建议使用 Homebrew 安装。 $ brew install hugo 如果是 Windows 或者 Homebrew 下载比较慢的话，建议到 Hugo 的 github release 页面下载压缩包。下载解压之后，可以得到 Hugo 的执行程序。 MacOS 或者 Linux 可以将指令放在 /usr/local/bin 目录。Windows 可以放在 C:\\Hugo\\bin目录。 注意：Windows 下需要将 hugo 的目录添加到环境变量。【开始】-\u003e 【系统】 -\u003e 【高级系统设置】-\u003e 【环境变量】-\u003e 【PATH】-\u003e 【新增】，然后添加 Hugo 的路径 C:\\Hugo\\bin。 安装完成之后，验证安装。 $ hugo version Hugo Static Site Generator v0.69.2/extended darwin/amd64 BuildDate: unknown ","date":"2020-08-05","objectID":"/20200812-use-hugo-create-site/:3:2","tags":["Hugo"],"title":"使用 Hugo 搭建个人站点","uri":"/20200812-use-hugo-create-site/"},{"categories":["自媒体"],"content":"快速入门 下面我们介绍几个 Hugo 的常用指令来快速入门。 生成站点 使用 hugo new site 命令生成站点。 $ hugo new site \u003c站点名称\u003e 进入生成的目录，目录结构如下： $ tree -L 2 . ├── archetypes // hugo new 生成博客的模板，通常不需要动 │ └── default.md ├── config.toml // 系统配置文件，后面详细介绍 ├── content // 页面和博客存放的目录 ├── data // 静态数据 ├── layouts // 布局文件 ├── static // 静态文件目录 └── themes // 主题目录 添加主题 $ cd \u003c站点目录\u003e $ git init $ git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke 下载完成之后，将主题添加到站点配置中。 $ echo 'theme = \"LoveIt\"' \u003e\u003e config.toml 添加文章 使用命令hugo new content/\u003c种类\u003e/\u003c文件名\u003e.\u003c后缀名\u003e创建第一篇文章。 $ hugo new posts/my-first-post.md 这里在 posts 目录下创建了一个名为my-first-post的 Markdown 文件。打开文件你会看到。 --- title: \"My First Post\" date: 2020-08-21T16:17:14+08:00 draft: true --- 这是文章的一些信息。由 archetypes/default.md 文件指定的。你可以在文件里添加一些内容。 预览 现在我们可以通过 hugo server 在本地进行预览。 $ hugo server -D 浏览器打开 http://localhost:1313/, 就可以看到页面了。 这里只是简单的感受了一下 hugo 的使用，下面我们将正式介绍 Hugo 搭建站点的一套工作流。 ","date":"2020-08-05","objectID":"/20200812-use-hugo-create-site/:3:3","tags":["Hugo"],"title":"使用 Hugo 搭建个人站点","uri":"/20200812-use-hugo-create-site/"},{"categories":["自媒体"],"content":"基本框架 这一部分我们介绍如何搭建我们博客的基础框架，包括代码仓库、站点配置、Github Page 托管、站内搜索和百度统计/谷歌统计等内容。 这一部分基本就配置一次就可以了，平时基本不需要改动。 ","date":"2020-08-05","objectID":"/20200812-use-hugo-create-site/:4:0","tags":["Hugo"],"title":"使用 Hugo 搭建个人站点","uri":"/20200812-use-hugo-create-site/"},{"categories":["自媒体"],"content":"创建代码仓库 这里我们需要创建两个代码仓库 blog 和 \u003c你的github名称\u003e.github.io 两个仓库。 blog 仓库： 用来托管我们站点的代码。 *.github.io: 用来存放托管的静态页面。 请到自己的 Github 创建这两个仓库。如果没有 Github 账号或者不会创建，请在网上自行搜索学习。 本地创建站点目录 // 创建 blog 目录 $ hugo new site blog // 添加主题， 这里以 LoveIt 为例 $ cd blog $ git init $ git remote add origin git@github.com:\u003c你的账号\u003e/blog.git 现在我们就已经对 blog 仓库做了版本管理, 将代码推到 Github。因为有些文件我们不需要托管，在 blog 目录下创建 .gitignore 文件。可以参考网站 gitignore.io 生成 ignore 文件内容。 /public/ /resources/_gen/ hugo_stats.json # Executable may be added to repository hugo.exe hugo.darwin hugo.linux 现在我们就已经对 blog 仓库做了版本管理, 可以将代码推到 Github。 $ git add . $ git commit -m \"commit message\" $ git push -u origin master ","date":"2020-08-05","objectID":"/20200812-use-hugo-create-site/:4:1","tags":["Hugo"],"title":"使用 Hugo 搭建个人站点","uri":"/20200812-use-hugo-create-site/"},{"categories":["自媒体"],"content":"站点配置（可选） $ git submodule add git@github.com:dillonzq/LoveIt.git themes/LoveIt // 将主题示例文章和配置复制到 blog 目录 $ cp -r themes/LoveIt/exampleSite/* ./ ","date":"2020-08-05","objectID":"/20200812-use-hugo-create-site/:4:2","tags":["Hugo"],"title":"使用 Hugo 搭建个人站点","uri":"/20200812-use-hugo-create-site/"},{"categories":["自媒体"],"content":"基本工作流 添加主题 以 LoveIt 为例。 \\$ git submodule add git@github.com:dillonzq/LoveIt.git themes/LoveIt ``` 通过网站 gitignore.io 生成 ignore 文件。 ``` ### Hugo # Generated files by hugo /public/ /resources/\\_gen/ hugo_stats.json # Executable may be added to repository hugo.exe hugo.darwin hugo.linux ``` - 复制常用配置 ``` cp -r themes/LoveIt/exampleSite/\\* ./ ``` \u003e 注释 themeDir 行 ``` # themesDir = \"../.. ``` - 预览效果 ``` \\$ hugo server -D ``` ## 内容 ### 图床 - 域名 - CDN ## 总结 ## 参考 ## 环境 ``` ","date":"2020-08-05","objectID":"/20200812-use-hugo-create-site/:4:3","tags":["Hugo"],"title":"使用 Hugo 搭建个人站点","uri":"/20200812-use-hugo-create-site/"},{"categories":null,"content":"This a test post for test hugo. ","date":"2020-08-05","objectID":"/first_post/:0:0","tags":null,"title":"第一篇测试文章","uri":"/first_post/"},{"categories":null,"content":"Intro This is a test post ","date":"2020-08-05","objectID":"/first_post/:1:0","tags":null,"title":"第一篇测试文章","uri":"/first_post/"},{"categories":null,"content":"Content ","date":"2020-08-05","objectID":"/first_post/:2:0","tags":null,"title":"第一篇测试文章","uri":"/first_post/"},{"categories":null,"content":"Step 1 This is step 1. $ npm install hugo -g ","date":"2020-08-05","objectID":"/first_post/:2:1","tags":null,"title":"第一篇测试文章","uri":"/first_post/"},{"categories":null,"content":"Step 2 This is step 1. const name = 'Dennis Ge'; console.log(name); ","date":"2020-08-05","objectID":"/first_post/:2:2","tags":null,"title":"第一篇测试文章","uri":"/first_post/"},{"categories":null,"content":"Summary This is a summary. ","date":"2020-08-05","objectID":"/first_post/:3:0","tags":null,"title":"第一篇测试文章","uri":"/first_post/"},{"categories":null,"content":"关于莫林 大家好，我叫莫林。渣硕一枚，目前在一家外企从事软件开发工作。 ","date":"2019-08-02","objectID":"/about/:1:0","tags":null,"title":"关于我","uri":"/about/"},{"categories":null,"content":"我的经历 本科专业为机械+软件，期间特别热衷于嵌入式开发，跟着学社做过一些小东西，获得过一些奖项。做过机械设计、画过 PCB, 但主要偏爱于软件开发，包括单片机开发以及上位机开发。都有所涉猎，但都不精通，勉强做点小东西。 研究生期间修的是机械电子。期间主要是把所有自己学得到东西做成一个作品：智能机器狗。机械载体是一个小机器车，可行走、有摄像头以及带有舵机云台，然后可以通过网页远程工程，以及通过 APP 控制。这个作品包括网页设计、安卓应用开发、C#上位机开发、单片机开发、PCB 设计以及后期视频制作都是自己单独完成，算是给自己大学生涯的一个礼物吧。不过，有幸获得了全国物联网大赛的一等奖。 毕业之后，没有做自己的老本行，而是机缘巧合做了 Node.js 后端开发。工作几年换了几家公司，主要是互联网金融和物联网行业。自己一直是做的 Node.js 后端开发。比较喜欢折腾，微服务、Docker、APM、 CI/CD 都有研究过。自己对框架性的东西比较感兴趣，所以了解会相对深一些。前端框架 Vue、 React 也有学过，但都不深入，主要 CSS 样式总是写不好， 哈哈。 目前在一家外企工作，物联网相关。架构主要是基于 AWS 的 Serverless 框架，技术栈是 Node.js、React、GraphQL。不过目前由于工作安排，自己开始折腾一些 C++、QT 和 USB HID。 ","date":"2019-08-02","objectID":"/about/:1:1","tags":null,"title":"关于我","uri":"/about/"},{"categories":null,"content":"现在的想法 以前想做的事很多，折腾的东西也多，但是没有做太好。现在想慢慢收敛自己的想法，能着手把一两件事做好，就很满足了。另外开始慢慢向内而生，多关注自己一点，做点自己喜欢的事。 目前几件在做的事： 技术： Node.js、AWS、Serverless。 英语：因为在外企，也因为有情节。 自媒体： 分享一些自己在学习过程中的心得与体会。 阅读：希望慢慢了解更多，理财、生活以及人生。 ","date":"2019-08-02","objectID":"/about/:1:2","tags":null,"title":"关于我","uri":"/about/"},{"categories":null,"content":"为什么写博客 写博客，是我对于自己成长的一点点记录，是一件我很喜欢做的事情。通过一点点的总结、积累，让我看到自己一点点的进步，这让我觉得心里比较踏实。 写博客还有几个好处： 写博客，需要对相关知识重新学习、归纳总结，让我对相关知识点有了更深的理解。 需要有逻辑性的、清晰地将知识点表达出来，并让人理解，这可以锻炼表达的能力。 分享经验给大家，并通过评论和交流，来重新修正自己的知识盲点和误区, 建立正反馈和闭环。 ","date":"2019-08-02","objectID":"/about/:2:0","tags":null,"title":"关于我","uri":"/about/"},{"categories":null,"content":"联系我 个人主页： https://www.molinjun.com Github: https://github.com/molinjun 微信公众号：莫林笔记 邮箱：molin1226@gmail.com ","date":"2019-08-02","objectID":"/about/:3:0","tags":null,"title":"关于我","uri":"/about/"}]